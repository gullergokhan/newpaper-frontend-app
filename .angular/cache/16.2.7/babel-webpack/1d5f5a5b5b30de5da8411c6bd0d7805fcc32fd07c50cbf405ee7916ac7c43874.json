{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {}\n  errorHandler(err) {\n    if (err.status == 404) {\n      console.log(\"api geçersiz\");\n    }\n    console.log(err);\n  }\n  static #_ = this.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ErrorService","constructor","errorHandler","err","status","console","log","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\services\\error.service.ts"],"sourcesContent":["import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class ErrorService{\r\n    constructor()  {}\r\n\r\n    errorHandler(err:HttpErrorResponse){\r\n        if(err.status==404){\r\n            console.log(\"api geçersiz\")\r\n        }\r\n        console.log(err);\r\n    }\r\n}"],"mappings":";AAMA,OAAM,MAAOA,YAAY;EACrBC,YAAA,GAAgB;EAEhBC,YAAYA,CAACC,GAAqB;IAC9B,IAAGA,GAAG,CAACC,MAAM,IAAE,GAAG,EAAC;MACfC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;IAE/BD,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;EACpB;EAAC,QAAAI,CAAA,G;qBARQP,YAAY;EAAA;EAAA,QAAAQ,EAAA,G;WAAZR,YAAY;IAAAS,OAAA,EAAZT,YAAY,CAAAU,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}