{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class BreadcrumbService {\n  constructor(router, activatedRoute) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.breadcrumbs = new BehaviorSubject([]);\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBreadcrumbs(this.activatedRoute.root);\n      }\n    });\n  }\n  getBreadcrumbs() {\n    return this.breadcrumbs.asObservable();\n  }\n  updateBreadcrumbs(route, url = '', breadcrumbs = []) {\n    const children = route.children;\n    if (children.length === 0) {\n      this.breadcrumbs.next(breadcrumbs);\n      return;\n    }\n    for (const child of children) {\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n      const breadcrumbData = child.snapshot.data; // Breadcrumb verisini nesne olarak al\n      breadcrumbs.push(breadcrumbData.breadcrumb);\n      this.updateBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n  static #_ = this.ɵfac = function BreadcrumbService_Factory(t) {\n    return new (t || BreadcrumbService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BreadcrumbService,\n    factory: BreadcrumbService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["NavigationEnd","BehaviorSubject","BreadcrumbService","constructor","router","activatedRoute","breadcrumbs","events","subscribe","event","updateBreadcrumbs","root","getBreadcrumbs","asObservable","route","url","children","length","next","child","routeURL","snapshot","map","segment","path","join","breadcrumbData","data","push","breadcrumb","_","i0","ɵɵinject","i1","Router","ActivatedRoute","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\services\\breadcrumb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class BreadcrumbService {\r\n    private breadcrumbs: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\r\n  \r\n    constructor(private router: Router, private activatedRoute: ActivatedRoute) {\r\n      this.router.events.subscribe(event => {\r\n        if (event instanceof NavigationEnd) {\r\n          this.updateBreadcrumbs(this.activatedRoute.root);\r\n        }\r\n      });\r\n    }\r\n  \r\n    getBreadcrumbs(): Observable<string[]> {\r\n      return this.breadcrumbs.asObservable();\r\n    }\r\n  \r\n    private updateBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: string[] = []): void {\r\n      const children: ActivatedRoute[] = route.children;\r\n  \r\n      if (children.length === 0) {\r\n        this.breadcrumbs.next(breadcrumbs);\r\n        return;\r\n      }\r\n  \r\n      for (const child of children) {\r\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\r\n        if (routeURL !== '') {\r\n          url += `/${routeURL}`;\r\n        }\r\n        const breadcrumbData = child.snapshot.data as { breadcrumb: string }; // Breadcrumb verisini nesne olarak al\r\n        breadcrumbs.push(breadcrumbData.breadcrumb);\r\n        this.updateBreadcrumbs(child, url, breadcrumbs);\r\n      }\r\n    }\r\n  }\r\n  "],"mappings":"AACA,SAAyBA,aAAa,QAAgB,iBAAiB;AACvE,SAASC,eAAe,QAAoB,MAAM;;;AAIhD,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,MAAc,EAAUC,cAA8B;IAAtD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAFlD,KAAAC,WAAW,GAA8B,IAAIL,eAAe,CAAW,EAAE,CAAC;IAGhF,IAAI,CAACG,MAAM,CAACG,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MACnC,IAAIA,KAAK,YAAYT,aAAa,EAAE;QAClC,IAAI,CAACU,iBAAiB,CAAC,IAAI,CAACL,cAAc,CAACM,IAAI,CAAC;;IAEpD,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,WAAW,CAACO,YAAY,EAAE;EACxC;EAEQH,iBAAiBA,CAACI,KAAqB,EAAEC,GAAA,GAAc,EAAE,EAAET,WAAA,GAAwB,EAAE;IAC3F,MAAMU,QAAQ,GAAqBF,KAAK,CAACE,QAAQ;IAEjD,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACX,WAAW,CAACY,IAAI,CAACZ,WAAW,CAAC;MAClC;;IAGF,KAAK,MAAMa,KAAK,IAAIH,QAAQ,EAAE;MAC5B,MAAMI,QAAQ,GAAWD,KAAK,CAACE,QAAQ,CAACN,GAAG,CAACO,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAClF,IAAIL,QAAQ,KAAK,EAAE,EAAE;QACnBL,GAAG,IAAI,IAAIK,QAAQ,EAAE;;MAEvB,MAAMM,cAAc,GAAGP,KAAK,CAACE,QAAQ,CAACM,IAA8B,CAAC,CAAC;MACtErB,WAAW,CAACsB,IAAI,CAACF,cAAc,CAACG,UAAU,CAAC;MAC3C,IAAI,CAACnB,iBAAiB,CAACS,KAAK,EAAEJ,GAAG,EAAET,WAAW,CAAC;;EAEnD;EAAC,QAAAwB,CAAA,G;qBAhCU5B,iBAAiB,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBlC,iBAAiB;IAAAmC,OAAA,EAAjBnC,iBAAiB,CAAAoC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}