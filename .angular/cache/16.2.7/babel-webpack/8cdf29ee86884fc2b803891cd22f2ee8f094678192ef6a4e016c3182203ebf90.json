{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/app.service\";\nimport * as i2 from \"src/services/breadcrumb.service\";\nexport class HealthComponent {\n  constructor(appService, breadcrumbService) {\n    this.appService = appService;\n    this.breadcrumbService = breadcrumbService;\n    this.news = [];\n    this.currentPosts = [];\n    this.currentPage = 1;\n    this.postsPerPage = 10;\n    this.pages = [];\n    this.breadcrumbService.setBreadcrumbs(['Home', 'Health']);\n  }\n  ngOnInit() {\n    this.appService.getNewsByCategory('health', res => {\n      this.news = res.articles;\n      this.setPageNumbers();\n      this.setCurrentPage(1);\n    });\n  }\n  setCurrentPage(page) {\n    this.currentPage = page;\n    const lastPostIndex = this.currentPage * this.postsPerPage;\n    const firstPostIndex = lastPostIndex - this.postsPerPage;\n    this.currentPosts = this.news.slice(firstPostIndex, lastPostIndex);\n  }\n  setPageNumbers() {\n    this.pages = Array(Math.ceil(this.news.length / this.postsPerPage)).fill(0).map((x, i) => i + 1);\n  }\n  static #_ = this.ɵfac = function HealthComponent_Factory(t) {\n    return new (t || HealthComponent)(i0.ɵɵdirectiveInject(i1.AppService), i0.ɵɵdirectiveInject(i2.BreadcrumbService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HealthComponent,\n    selectors: [[\"app-health\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    template: function HealthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"health works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CommonModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","HealthComponent","constructor","appService","breadcrumbService","news","currentPosts","currentPage","postsPerPage","pages","setBreadcrumbs","ngOnInit","getNewsByCategory","res","articles","setPageNumbers","setCurrentPage","page","lastPostIndex","firstPostIndex","slice","Array","Math","ceil","length","fill","map","x","i","_","i0","ɵɵdirectiveInject","i1","AppService","i2","BreadcrumbService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","HealthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\app\\components\\health\\health.component.ts","C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\app\\components\\health\\health.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppService } from 'src/services/app.service';\nimport { BreadcrumbService } from 'src/services/breadcrumb.service';\n\n\n@Component({\n  selector: 'app-health',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './health.component.html',\n  styleUrls: ['./health.component.css']\n})\nexport class HealthComponent {\n  news: any[] = [];\n  currentPosts: any[] = [];\n  currentPage = 1;\n  postsPerPage = 10; \n  pages: number[] = [];\n\n  constructor(private appService: AppService, private breadcrumbService: BreadcrumbService) {\n    this.breadcrumbService.setBreadcrumbs(['Home', 'Health']);\n  }\n\n  ngOnInit() {\n    this.appService.getNewsByCategory('health', (res) => {\n      this.news = res.articles; \n      this.setPageNumbers();\n      this.setCurrentPage(1);\n    });\n  }\n \n  setCurrentPage(page: number) {\n    this.currentPage = page;\n    const lastPostIndex = this.currentPage * this.postsPerPage;\n    const firstPostIndex = lastPostIndex - this.postsPerPage;\n    this.currentPosts = this.news.slice(firstPostIndex, lastPostIndex);\n  }\n\n  setPageNumbers() {\n    this.pages = Array(Math.ceil(this.news.length / this.postsPerPage))\n      .fill(0)\n      .map((x, i) => i + 1);\n  }\n}","<p>health works!</p>\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;;;AAY9C,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,UAAsB,EAAUC,iBAAoC;IAApE,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IANrE,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,KAAK,GAAa,EAAE;IAGlB,IAAI,CAACL,iBAAiB,CAACM,cAAc,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC3D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACR,UAAU,CAACS,iBAAiB,CAAC,QAAQ,EAAGC,GAAG,IAAI;MAClD,IAAI,CAACR,IAAI,GAAGQ,GAAG,CAACC,QAAQ;MACxB,IAAI,CAACC,cAAc,EAAE;MACrB,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EACJ;EAEAA,cAAcA,CAACC,IAAY;IACzB,IAAI,CAACV,WAAW,GAAGU,IAAI;IACvB,MAAMC,aAAa,GAAG,IAAI,CAACX,WAAW,GAAG,IAAI,CAACC,YAAY;IAC1D,MAAMW,cAAc,GAAGD,aAAa,GAAG,IAAI,CAACV,YAAY;IACxD,IAAI,CAACF,YAAY,GAAG,IAAI,CAACD,IAAI,CAACe,KAAK,CAACD,cAAc,EAAED,aAAa,CAAC;EACpE;EAEAH,cAAcA,CAAA;IACZ,IAAI,CAACN,KAAK,GAAGY,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAClB,IAAI,CAACmB,MAAM,GAAG,IAAI,CAAChB,YAAY,CAAC,CAAC,CAChEiB,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EACzB;EAAC,QAAAC,CAAA,G;qBA9BU5B,eAAe,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfnC,eAAe;IAAAoC,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAT,EAAA,CAAAU,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb5Bf,EAAA,CAAAiB,cAAA,QAAG;QAAAjB,EAAA,CAAAkB,MAAA,oBAAa;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;mBDSRjD,YAAY;IAAAkD,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}