{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction HeaderComponent_li_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const crumb_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(crumb_r1);\n  }\n}\nfunction HeaderComponent_li_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \">\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HeaderComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵtemplate(1, HeaderComponent_li_11_ng_container_1_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵtemplate(2, HeaderComponent_li_11_ng_template_2_Template, 2, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const crumb_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", crumb_r1 !== \">\")(\"ngIfElse\", _r3);\n  }\n}\nexport class HeaderComponent {\n  constructor(router, activatedRoute) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.breadcrumbs = [];\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.updateBreadcrumbs(this.activatedRoute.root);\n    });\n  }\n  updateBreadcrumbs(route, url = '', breadcrumbs = []) {\n    const children = route.children;\n    if (children.length === 0) {\n      this.breadcrumbs = breadcrumbs;\n      return;\n    }\n    for (const child of children) {\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n      const breadcrumbData = child.snapshot.data['breadcrumb'];\n      breadcrumbs.push(breadcrumbData);\n      this.updateBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n  static #_ = this.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"app-header\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-light\", \"bg-light\", \"justify-content-between\"], [1, \"navbar-brand\"], [1, \"form-inline\"], [\"type\", \"search\", \"placeholder\", \"Search\", \"aria-label\", \"Search\", 1, \"form-control\", \"mr-sm-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\", \"my-2\", \"my-sm-0\"], [1, \"card\"], [1, \"card-header\"], [\"aria-label\", \"breadcrumb\", 2, \"--bs-breadcrumb-divider\", \"'>'\"], [1, \"breadcrumb\"], [\"class\", \"breadcrumb-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"breadcrumb-item\"], [4, \"ngIf\", \"ngIfElse\"], [\"divider\", \"\"], [1, \"breadcrumb-divider\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"G\\u00F6khan G\\u00DCLLER \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵtext(6, \"Search\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"nav\", 7)(10, \"ol\", 8);\n        i0.ɵɵtemplate(11, HeaderComponent_li_11_Template, 4, 2, \"li\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.breadcrumbs);\n      }\n    },\n    dependencies: [CommonModule, i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","NavigationEnd","filter","i0","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","crumb_r1","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","HeaderComponent_li_11_ng_container_1_Template","HeaderComponent_li_11_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵproperty","_r3","HeaderComponent","constructor","router","activatedRoute","breadcrumbs","events","pipe","event","subscribe","updateBreadcrumbs","root","route","url","children","length","child","routeURL","snapshot","map","segment","path","join","breadcrumbData","data","push","_","ɵɵdirectiveInject","i1","Router","ActivatedRoute","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","ɵɵelement","HeaderComponent_li_11_Template","i2","NgForOf","NgIf","styles"],"sources":["C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\app\\components\\layouts\\header\\header.component.ts","C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\app\\components\\layouts\\header\\header.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbService } from 'src/services/breadcrumb.service';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  breadcrumbs: string[] = [];\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.router.events\n      .pipe(filter((event: any) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.updateBreadcrumbs(this.activatedRoute.root);\n      });\n  }\n\n  updateBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: string[] = []): void {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      this.breadcrumbs = breadcrumbs;\n      return;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n      const breadcrumbData = child.snapshot.data['breadcrumb'];\n      breadcrumbs.push(breadcrumbData);\n      this.updateBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n}\n\n","<nav class=\"navbar navbar-light bg-light justify-content-between\" >\n    <a class=\"navbar-brand\">Gökhan GÜLLER\n    </a>\n    <form class=\"form-inline\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </nav>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <nav style=\"--bs-breadcrumb-divider:'>';\" aria-label=\"breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\" *ngFor=\"let crumb of breadcrumbs\">\n            <ng-container *ngIf=\"crumb !== '>'; else divider\">{{ crumb }}</ng-container>\n            <ng-template #divider><span class=\"breadcrumb-divider\">></span></ng-template>\n          </li>\n        </ol>\n      </nav>\n    </div>\n  </div>\n  "],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAAyBC,aAAa,QAAgB,iBAAiB;AACvE,SAASC,MAAM,QAAQ,MAAM;;;;;;ICSjBC,EAAA,CAAAC,uBAAA,GAAkD;IAAAD,EAAA,CAAAE,MAAA,GAAW;IAAAF,EAAA,CAAAG,qBAAA,EAAe;;;;IAA1BH,EAAA,CAAAI,SAAA,GAAW;IAAXJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAW;;;;;IACvCN,EAAA,CAAAO,cAAA,eAAiC;IAAAP,EAAA,CAAAE,MAAA,QAAC;IAAAF,EAAA,CAAAQ,YAAA,EAAO;;;;;IAFjER,EAAA,CAAAO,cAAA,aAA8D;IAC5DP,EAAA,CAAAS,UAAA,IAAAC,6CAAA,2BAA4E;IAC5EV,EAAA,CAAAS,UAAA,IAAAE,4CAAA,iCAAAX,EAAA,CAAAY,sBAAA,CAA6E;IAC/EZ,EAAA,CAAAQ,YAAA,EAAK;;;;;IAFYR,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAa,UAAA,SAAAP,QAAA,SAAqB,aAAAQ,GAAA;;;ADAhD,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,MAAc,EAAUC,cAA8B;IAAtD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAF1D,KAAAC,WAAW,GAAa,EAAE;IAGxB,IAAI,CAACF,MAAM,CAACG,MAAM,CACfC,IAAI,CAACtB,MAAM,CAAEuB,KAAU,IAAKA,KAAK,YAAYxB,aAAa,CAAC,CAAC,CAC5DyB,SAAS,CAAC,MAAK;MACd,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACN,cAAc,CAACO,IAAI,CAAC;IAClD,CAAC,CAAC;EACN;EAEAD,iBAAiBA,CAACE,KAAqB,EAAEC,GAAA,GAAc,EAAE,EAAER,WAAA,GAAwB,EAAE;IACnF,MAAMS,QAAQ,GAAqBF,KAAK,CAACE,QAAQ;IAEjD,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACV,WAAW,GAAGA,WAAW;MAC9B;;IAGF,KAAK,MAAMW,KAAK,IAAIF,QAAQ,EAAE;MAC5B,MAAMG,QAAQ,GAAWD,KAAK,CAACE,QAAQ,CAACL,GAAG,CAACM,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAClF,IAAIL,QAAQ,KAAK,EAAE,EAAE;QACnBJ,GAAG,IAAI,IAAII,QAAQ,EAAE;;MAEvB,MAAMM,cAAc,GAAGP,KAAK,CAACE,QAAQ,CAACM,IAAI,CAAC,YAAY,CAAC;MACxDnB,WAAW,CAACoB,IAAI,CAACF,cAAc,CAAC;MAChC,IAAI,CAACb,iBAAiB,CAACM,KAAK,EAAEH,GAAG,EAAER,WAAW,CAAC;;EAEnD;EAAC,QAAAqB,CAAA,G;qBA5BUzB,eAAe,EAAAf,EAAA,CAAAyC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAA3C,EAAA,CAAAyC,iBAAA,CAAAC,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAf9B,eAAe;IAAA+B,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAhD,EAAA,CAAAiD,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb5BvD,EAAA,CAAAO,cAAA,aAAmE;QACvCP,EAAA,CAAAE,MAAA,+BACxB;QAAAF,EAAA,CAAAQ,YAAA,EAAI;QACJR,EAAA,CAAAO,cAAA,cAA0B;QACxBP,EAAA,CAAAyD,SAAA,eAA2F;QAC3FzD,EAAA,CAAAO,cAAA,gBAAmE;QAAAP,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAQ,YAAA,EAAS;QAGtFR,EAAA,CAAAO,cAAA,aAAkB;QAIVP,EAAA,CAAAS,UAAA,KAAAiD,8BAAA,gBAGK;QACP1D,EAAA,CAAAQ,YAAA,EAAK;;;QAJ2CR,EAAA,CAAAI,SAAA,IAAc;QAAdJ,EAAA,CAAAa,UAAA,YAAA2C,GAAA,CAAArC,WAAA,CAAc;;;mBDH1DtB,YAAY,EAAA8D,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA;IAAAC,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}