{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class BreadcrumbService {\n  setBreadcrumbs(breadcrumbs) {\n    this.breadcrumbs.next(breadcrumbs);\n  }\n  getBreadcrumbs() {\n    return this.breadcrumbs.asObservable();\n  }\n  constructor(router, activatedRoute) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.breadcrumbs = new BehaviorSubject([]);\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBreadcrumbs(this.activatedRoute.root);\n      }\n    });\n  }\n  updateBreadcrumbs(route, url = '', breadcrumbs = []) {\n    const children = route.children;\n    if (children.length === 0) {\n      this.breadcrumbs.next(breadcrumbs);\n      return;\n    }\n    for (const child of children) {\n      const routeURL = child.snapshot.url.map(segment => segment.path).join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n      const breadcrumbData = child.snapshot.data;\n      breadcrumbs.push(breadcrumbData.breadcrumb);\n      this.updateBreadcrumbs(child, url, breadcrumbs);\n    }\n  }\n  static #_ = this.ɵfac = function BreadcrumbService_Factory(t) {\n    return new (t || BreadcrumbService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BreadcrumbService,\n    factory: BreadcrumbService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["NavigationEnd","BehaviorSubject","BreadcrumbService","setBreadcrumbs","breadcrumbs","next","getBreadcrumbs","asObservable","constructor","router","activatedRoute","events","subscribe","event","updateBreadcrumbs","root","route","url","children","length","child","routeURL","snapshot","map","segment","path","join","breadcrumbData","data","push","breadcrumb","_","i0","ɵɵinject","i1","Router","ActivatedRoute","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\COMPUTER\\Desktop\\newpaper-frontend-app\\src\\services\\breadcrumb.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BreadcrumbService {\r\n  private breadcrumbs: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\r\n\r\n  setBreadcrumbs(breadcrumbs: string[]): void {\r\n    this.breadcrumbs.next(breadcrumbs);\r\n  }\r\n\r\n  getBreadcrumbs(): Observable<string[]> {\r\n    return this.breadcrumbs.asObservable();\r\n  }\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.updateBreadcrumbs(this.activatedRoute.root);\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: string[] = []): void {\r\n    const children: ActivatedRoute[] = route.children;\r\n\r\n    if (children.length === 0) {\r\n      this.breadcrumbs.next(breadcrumbs);\r\n      return;\r\n    }\r\n\r\n    for (const child of children) {\r\n      const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\r\n      if (routeURL !== '') {\r\n        url += `/${routeURL}`;\r\n      }\r\n      const breadcrumbData = child.snapshot.data as { breadcrumb: string };\r\n      breadcrumbs.push(breadcrumbData.breadcrumb);\r\n      this.updateBreadcrumbs(child, url, breadcrumbs);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAyBA,aAAa,QAAgB,iBAAiB;AACvE,SAASC,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,iBAAiB;EAG5BC,cAAcA,CAACC,WAAqB;IAClC,IAAI,CAACA,WAAW,CAACC,IAAI,CAACD,WAAW,CAAC;EACpC;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE;EACxC;EAEAC,YAAoBC,MAAc,EAAUC,cAA8B;IAAtD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAVlD,KAAAN,WAAW,GAA8B,IAAIH,eAAe,CAAW,EAAE,CAAC;IAWhF,IAAI,CAACQ,MAAM,CAACE,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MACnC,IAAIA,KAAK,YAAYb,aAAa,EAAE;QAClC,IAAI,CAACc,iBAAiB,CAAC,IAAI,CAACJ,cAAc,CAACK,IAAI,CAAC;;IAEpD,CAAC,CAAC;EACJ;EAEQD,iBAAiBA,CAACE,KAAqB,EAAEC,GAAA,GAAc,EAAE,EAAEb,WAAA,GAAwB,EAAE;IAC3F,MAAMc,QAAQ,GAAqBF,KAAK,CAACE,QAAQ;IAEjD,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACf,WAAW,CAACC,IAAI,CAACD,WAAW,CAAC;MAClC;;IAGF,KAAK,MAAMgB,KAAK,IAAIF,QAAQ,EAAE;MAC5B,MAAMG,QAAQ,GAAWD,KAAK,CAACE,QAAQ,CAACL,GAAG,CAACM,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAClF,IAAIL,QAAQ,KAAK,EAAE,EAAE;QACnBJ,GAAG,IAAI,IAAII,QAAQ,EAAE;;MAEvB,MAAMM,cAAc,GAAGP,KAAK,CAACE,QAAQ,CAACM,IAA8B;MACpExB,WAAW,CAACyB,IAAI,CAACF,cAAc,CAACG,UAAU,CAAC;MAC3C,IAAI,CAAChB,iBAAiB,CAACM,KAAK,EAAEH,GAAG,EAAEb,WAAW,CAAC;;EAEnD;EAAC,QAAA2B,CAAA,G;qBApCU7B,iBAAiB,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBnC,iBAAiB;IAAAoC,OAAA,EAAjBpC,iBAAiB,CAAAqC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}